{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Dinesh2228/Dinesh2228/blob/main/ml%20project%20to%20find%20co/co2%20ratio\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from typing_extensions import dataclass_transform\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import joblib\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "\n",
        "file_path = '/content/drive/My Drive/bf3_data_2022_01_07.xlsx'\n",
        "data = pd.read_excel(file_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0tWFEfnZa1sF",
        "outputId": "d639649c-13cc-4cf4-a4aa-67374ed0f925"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display first few rows of the dataset\n",
        "print(data.head())\n",
        "\n",
        "# Check for missing values\n",
        "print(data.isnull().sum())\n",
        "\n",
        "# Handle missing values by imputing the mean for numeric columns\n",
        "data.fillna(data.mean(), inplace=True)\n",
        "\n",
        "# Confirm there are no missing values\n",
        "print(data.isnull().sum())\n",
        "data['CO_CO2_Ratio'] = data['CO'] / data['CO2']\n",
        "# Extract features and target variable\n",
        "print\n",
        "X = data.drop(columns=['CO2', 'CO',  'CO_CO2_Ratio'])\n",
        "y = data['CO_CO2_Ratio']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ncceAN0ea1gW",
        "outputId": "12732e41-8642-45d9-f528-9b44bd31efdd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    CB_FLOW  CB_PRESS  CB_TEMP  STEAM_FLOW  STEAM_TEMP  STEAM_PRESS  O2_PRESS  \\\n",
            "0  311727.0      3.15    129.0         4.0       213.0         3.34      3.20   \n",
            "1  315163.0      3.16    129.0         4.0       209.0         3.35      3.20   \n",
            "2  314595.0      3.16    128.0         4.0       205.0         3.35      3.21   \n",
            "3  312465.0      3.16    127.0         4.0       200.0         3.35      3.21   \n",
            "4  302981.0      3.11    126.0         4.0       194.0         3.29      3.16   \n",
            "\n",
            "   O2_FLOW  O2_PER   PCI  ...  TOP_TEMP3  TOP_TEMP4  TOP_SPRAY  TOP_TEMP  \\\n",
            "0   7296.0   23.08  32.0  ...      107.0      130.0        0.0     121.0   \n",
            "1   7829.0   23.08  30.0  ...      109.0      128.0        0.0     125.0   \n",
            "2   7904.0   23.08  31.0  ...      110.0      124.0        0.0     124.0   \n",
            "3   7919.0   23.08  36.0  ...      102.0      110.0        0.0     115.0   \n",
            "4   7938.0   23.08  36.0  ...      112.0      124.0        0.0     125.0   \n",
            "\n",
            "   TOP_PRESS_1     CO    CO2    H2  SKIN_TEMP_AVG  CO_CO2_Ratio  \n",
            "0          2.0  22.22  21.00  3.88      69.940478      1.058095  \n",
            "1          1.0  22.56  21.00  3.94      71.454476      1.074286  \n",
            "2          1.0  22.49  21.08  3.94      70.579462      1.066888  \n",
            "3          1.0  22.36  21.13  3.99      70.179791      1.058211  \n",
            "4          1.0  22.25  21.30  4.10      70.728470      1.044601  \n",
            "\n",
            "[5 rows x 26 columns]\n",
            "CB_FLOW          0\n",
            "CB_PRESS         0\n",
            "CB_TEMP          0\n",
            "STEAM_FLOW       0\n",
            "STEAM_TEMP       0\n",
            "STEAM_PRESS      0\n",
            "O2_PRESS         0\n",
            "O2_FLOW          0\n",
            "O2_PER           0\n",
            "PCI              0\n",
            "ATM_HUMID        0\n",
            "HB_TEMP          0\n",
            "HB_PRESS         0\n",
            "TOP_PRESS        0\n",
            "TOP_TEMP1        0\n",
            "TOP_TEMP2        0\n",
            "TOP_TEMP3        0\n",
            "TOP_TEMP4        0\n",
            "TOP_SPRAY        0\n",
            "TOP_TEMP         0\n",
            "TOP_PRESS_1      0\n",
            "CO               0\n",
            "CO2              0\n",
            "H2               0\n",
            "SKIN_TEMP_AVG    0\n",
            "CO_CO2_Ratio     0\n",
            "dtype: int64\n",
            "CB_FLOW          0\n",
            "CB_PRESS         0\n",
            "CB_TEMP          0\n",
            "STEAM_FLOW       0\n",
            "STEAM_TEMP       0\n",
            "STEAM_PRESS      0\n",
            "O2_PRESS         0\n",
            "O2_FLOW          0\n",
            "O2_PER           0\n",
            "PCI              0\n",
            "ATM_HUMID        0\n",
            "HB_TEMP          0\n",
            "HB_PRESS         0\n",
            "TOP_PRESS        0\n",
            "TOP_TEMP1        0\n",
            "TOP_TEMP2        0\n",
            "TOP_TEMP3        0\n",
            "TOP_TEMP4        0\n",
            "TOP_SPRAY        0\n",
            "TOP_TEMP         0\n",
            "TOP_PRESS_1      0\n",
            "CO               0\n",
            "CO2              0\n",
            "H2               0\n",
            "SKIN_TEMP_AVG    0\n",
            "CO_CO2_Ratio     0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Split the data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Train two models and evaluate them\n",
        "models = {\n",
        "    'LinearRegression': LinearRegression(),\n",
        "    'RandomForestRegressor': RandomForestRegressor(n_estimators=100, random_state=42)\n",
        "}\n",
        "\n",
        "results = {}\n",
        "\n",
        "for name, model in models.items():\n",
        "    model.fit(X_train, y_train)\n",
        "    y_pred = model.predict(X_test)\n",
        "    mse = mean_squared_error(y_test, y_pred)\n",
        "    r2 = r2_score(y_test, y_pred)\n",
        "    results[name] = {'model': model, 'mse': mse, 'r2': r2}\n",
        "    print(f'{name} - MSE: {mse}, R2: {r2}')\n",
        "\n",
        "# Select the best model based on R2 score\n",
        "best_model_name = max(results, key=lambda x: results[x]['r2'])\n",
        "best_model = results[best_model_name]['model']\n",
        "print(f'Best model: {best_model_name}')\n",
        "\n",
        "# Plotting the actual vs predicted values for the best model\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.scatter(y_test, results[best_model_name]['model'].predict(X_test), alpha=0.7)\n",
        "plt.xlabel('Actual CO/CO2 Ratio')\n",
        "plt.ylabel('Predicted CO/CO2 Ratio')\n",
        "plt.title(f'Actual vs Predicted CO/CO2 Ratio using {best_model_name}')\n",
        "plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', lw=2)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 616
        },
        "id": "9oj_Yjjpa1LX",
        "outputId": "4a293a30-7820-4667-b33a-ca778e4ab17e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "LinearRegression - MSE: 0.012360707670353818, R2: 0.5949728021610501\n",
            "RandomForestRegressor - MSE: 0.0014594685104423412, R2: 0.9521771360602264\n",
            "Best model: RandomForestRegressor\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c3fN3gCe2EBP",
        "outputId": "766b534d-1f0e-4066-ddeb-c42060056ac4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predicted CO2: 1.0576989393686222\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "# Making a single prediction\n",
        "new_data = np.array([[311727, 3.15, 129, 4, 213, 3.34, 3.2, 7296, 23.08, 32, 24.56, 1060, 2.99, 1.5, 112, 135, 107, 130, 0, 121, 2, 3.88, 69.9]])\n",
        "new_data_pred = best_model.predict(new_data)\n",
        "print(f'Predicted CO2: {new_data_pred[0]}')"
      ]
    }
  ]
}